//
//  NotesScreen.swift
//  Noter
//
//  Created by Đoàn Minh Hoàng on 4/27/17.
//  Copyright © 2017 Đoàn Minh Hoàng. All rights reserved.
//

import UIKit
import Firebase
import FirebaseDatabase

struct note {
    let title: String!
    let content: String!
    let key: String!
}

class NotesScreen: UIViewController, UITableViewDataSource, UITableViewDelegate{

    @IBOutlet weak var notesList: UITableView!
    var notes = [note]()
    var noteEditTitle: String?
    var noteEditContent: String?
    var noteEditKey: String?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        notesList.dataSource = self
        notesList.delegate = self
        // Do any additional setup after loading the view.
    }
    
    override func viewDidAppear(_ animated: Bool) {
        self.loadData()
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func loadData() { // this function is for load the data from firebase and put it into an array of struct note
        let databaseRef: FIRDatabaseReference!
        let user = FIRAuth.auth()!.currentUser
        databaseRef = FIRDatabase.database().reference()
        notes.removeAll() // remove old data before append the new data
        databaseRef.child(user!.uid).queryOrderedByKey().observe(.childAdded , with: {
            (snapshot) in
            let value = snapshot.value as? [String: String]
            let refKey = snapshot.key as String // get the key generated by autoID
            let refTitle = value!["title"] // get the title of the note
            let refContent = value!["content"] // get the content of the note
            self.notes.append(note(title: refTitle, content: refContent, key: refKey))
            self.notesList.reloadData()
        })
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return notes.count
    }
    
    func tableView(_ tableView: UITableView , cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "Note") as! NoteCell
        cell.noteLabel.text = notes[indexPath.row].title
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        noteEditTitle = notes[indexPath.row].title
        noteEditContent = notes[indexPath.row].content
        noteEditKey = notes[indexPath.row].key
        self.performSegue(withIdentifier: "editNote", sender: nil) // move to edit screen with suitable data
        tableView.deselectRow(at: indexPath, animated: true)
    }
    
    
    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        if (editingStyle == UITableViewCellEditingStyle.delete) {
            // handle delete (by removing the data from your array and updating the tableview)
            let databaseRef: FIRDatabaseReference!
            let user = FIRAuth.auth()!.currentUser
            databaseRef = FIRDatabase.database().reference()
            databaseRef.child(user!.uid).child(notes[indexPath.row].key).removeValue() // remove data from firebase
            self.notes.remove(at: indexPath.row) // remove data from array of struct note
            tableView.deleteRows(at: [indexPath], with: .fade)
            tableView.reloadData()
        }
    }

    @IBAction func logoutButton(_ sender: UIBarButtonItem) {
        let firebaseAuth = FIRAuth.auth()
        do {
            try firebaseAuth?.signOut()
            let userDefault = UserDefaults.standard
            userDefault.set(false, forKey: "isLoggedIn") // set login status to false when user logout successfully
            userDefault.synchronize()
            let storyBoard = UIStoryboard(name: "Main", bundle: nil)
            let loginScreen = storyBoard.instantiateViewController(withIdentifier: "loginScreen")
            self.present(loginScreen, animated: true, completion: nil)
//            UIApplication.shared.keyWindow?.rootViewController = loginScreen // incase there are some intro screen before
        } catch let signOutError as NSError {
            print ("Error signing out: %@", signOutError)
        }
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "editNote" {
            let editVC = segue.destination as! EditNote // send suitable data to edit screen
            editVC.editTitle = noteEditTitle
            editVC.editContent = noteEditContent
            editVC.editKey = noteEditKey
        }
    }
}
